UNA VEZ REGISTRADO EL CLUSTER DE K8S EN OSM:




#VNXLAB2022-v3 (los de AccessNet2 y ExtNet2 creo que no hacen falta)
sudo ovs-vsctl add-br ExtNet1

sudo ovs-vsctl add-br AccessNet1

sudo ovs-vsctl add-br AccessNet2

sudo ovs-vsctl add-br ExtNet2

sudo cat <<EOF | microk8s kubectl -n 7b2950d8-f92b-4041-9a55-8d1837ad7b0a create -f -
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
 name: bridgeosm
spec:
  config: '{
    "cniVersion": "0.4.0",
     "type": "bridge"
  }'
EOF

sudo cat <<EOF | microk8s kubectl -n 7b2950d8-f92b-4041-9a55-8d1837ad7b0a create -f -
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: accessnet1
  annotations:
    k8s.v1.cni.cncf.io/resourceName: ovs-cni.network.kubevirt.io/accessnet1
spec:
 config: '{
     "cniVersion": "0.4.0",
     "type": "ovs",
      "bridge": "AccessNet1"
  }'
EOF

sudo cat <<EOF | microk8s kubectl -n 7b2950d8-f92b-4041-9a55-8d1837ad7b0a create -f -
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: extnet1
  annotations:
    k8s.v1.cni.cncf.io/resourceName: ovs-cni.network.kubevirt.io/extnet1
spec:
  config: '{
    "cniVersion": "0.4.0",
    "type": "ovs",
    "bridge": "ExtNet1"
  }'
EOF


#VNXNFVLAB2022-v1
osm repo-add --type helm-chart --description "Repo para practica OSM" helmchartrepo https://josevirseda.github.io/Helm/

osm nfpkg-create accessknf_nfd.yaml
osm nfpkg-create cpeknf_nfd.yaml
osm nspkg-create nsred1_nsd.yaml
osm ns-create --ns_name vcpe1 --nsd_name nsred1 --vim_account dummy_vim

Obtener chart de una VNF: 
osm vnf-show --literal $VNFID | grep name | grep access |  awk '{split($0,a,":");print a[2]}'


Obtener identificadores parciales de los charts de un servicio "vcpe1"
export NSTEXT=vcpe1
osm ns-list | grep $NSTEXT | awk '{split($0,a,"|");print a[3]}' | osm vnf-list --ns $(</dev/stdin) | grep "access" | awk '{split($0,a,"|");print a[2]}' | osm vnf-show --literal $(</dev/stdin) | grep name | grep -E 'access|cpe' | awk '{split($0,a,":");print a[2]}'

#resultado ejemplo: helmchartrepo-accesschart-0058293679 

Obtener identificador parcial del chart "cpe" de un servicio "vcpe1"
osm ns-list | grep "vcpe1" | awk '{split($0,a,"|");print a[3]}' | osm vnf-list --ns $(</dev/stdin) | grep "cpe" | awk '{split($0,a,"|");print a[2]}' | osm vnf-show --literal $(</dev/stdin) | grep name | grep cpe | awk '{split($0,a,":");print a[2]}'


A partir del identificador parcial, en la maquina k8s, fijar variable para abrir consolas
export OSMNS="7b2950d8-f92b-4041-9a55-8d1837ad7b0a"
export VACC1=$(sudo microk8s kubectl -n $OSMNS get pods | grep helmchartrepo-accesschart-0007698333 | awk '{print $1}')
export VCPE1=$(sudo microk8s kubectl -n $OSMNS get pods | grep helmchartrepo-cpechart-0097150092 | awk '{print $1}')



# Sin identificador parcial, con un solo servicio de red en la maquina k8s, fijar variable para abrir consolas
export OSMNS="7b2950d8-f92b-4041-9a55-8d1837ad7b0a"
export VCPE1=$(sudo microk8s kubectl -n $OSMNS get pods | grep helmchartrepo-cpechart | awk '{print $1}')
export VACC1=$(sudo microk8s kubectl -n $OSMNS get pods | grep helmchartrepo-accesschart | awk '{print $1}')


Abrir consola 

sudo microk8s kubectl exec -n $OSMNS -it $VCPE1_ACCESS -- /bin/bash

sudo microk8s kubectl exec -n $OSMNS -it $VCPE1_CPE -- /bin/bash


TRAS ELLO, CREAR LOS ESCENARIOS VNX Y HACER LO DE "Configuracion rutas practica OSM"




